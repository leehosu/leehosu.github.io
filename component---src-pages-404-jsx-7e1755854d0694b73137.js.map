{"version":3,"sources":["webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/pages/404.jsx"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","SEO","render","title","description","keywords","postURL","this","props","postNode","postPath","postSEO","image","postMeta","frontmatter","excerpt","cover","childImageSharp","fixed","src","urljoin","config","siteUrl","pathPrefix","siteTitle","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","itemListElement","position","item","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","Component","PageNotFound","hasFooter","className","pageNotFoundTitle","pageNotFoundContent","to","pageNotFoundBtn"],"mappings":"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","file":"component---src-pages-404-jsx-7e1755854d0694b73137.js","sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords\n\n      if (postMeta.cover) {\n        image = postMeta.cover.childImageSharp.fixed.src;\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport SEO from \"../components/SEO/SEO\";\nimport AutoLink from \"../components/AutoLink/AutoLink\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageNotFound = () => (\n  <Layout hasFooter={false}>\n    <div className=\"page-not-found-container\">\n      <Helmet title={`${config.pageNotFoundTitle} - ${config.siteTitle}`} />\n      <SEO />\n      <Header title={`${config.pageNotFoundTitle}`} />\n      <div \n        className=\"main-content container padding-top-3 padding-bottom-3 margin-top-3 margin-bottom-3\"\n      >\n        <p>{config.pageNotFoundContent}</p>\n        <AutoLink to=\"/\" className=\"btn btn-primary\">\n          {config.pageNotFoundBtn}\n        </AutoLink>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default PageNotFound;"],"sourceRoot":""}