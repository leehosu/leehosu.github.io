{"version":3,"sources":["webpack:///./src/components/Sidebar/WidgetContainer.jsx","webpack:///./src/components/Sidebar/WidgetTitle.jsx","webpack:///./src/components/Sidebar/WidgetCategory.jsx","webpack:///./src/components/Tag/Tag.jsx","webpack:///./src/components/Sidebar/WidgetTag.jsx","webpack:///./src/components/Sidebar/WidgetLatestPosts.jsx","webpack:///./src/components/Sidebar/WidgetLinks.jsx","webpack:///./src/components/Sidebar/WidgetSearch.jsx","webpack:///./src/components/Sidebar/Sidebar.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/Adsense/Adsense.jsx","webpack:///./src/components/MainContainer/MainContainer.jsx","webpack:///./src/components/Page/Page.jsx","webpack:///./src/templates/page-template.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["WidgetContainer","extraClass","children","className","WidgetTitle","title","WidgetCategory","categoryList","config","categoryWidgetTitle","map","category","AutoLink","key","to","getCategoryPath","Tag","content","getTagPath","WidgetTag","tagList","tagWidgetTitle","tag","WidgetLatesPosts","latestPostEdges","postList","getPostList","latestPostsWidgetTitle","post","index","slug","WidgetLinks","links","length","linksWidgetTitle","link","label","url","WidgetSearch","render","hasSearch","searchWidgetTitle","type","name","placeholder","searchWidgetPlaceHolder","required","spellCheck","Component","Sidebar","sidebarSticky","style","width","WidgetLatestPosts","client","slot","format","responsive","layoutKey","normalize","strArray","resultArray","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","GoogleAdvertise","useEffect","window","adsbygoogle","console","log","e","error","overflowX","overflowY","display","textAlign","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","data-ad-layout-key","MainContainer","sidebar","Page","postNode","frontmatter","id","dangerouslySetInnerHTML","__html","html","PageTemplate","data","pageContext","markdownRemark","sidebarLinks","siteTitle","SEO","postPath","postSEO","Header","description","keywords","postURL","this","props","image","postMeta","excerpt","cover","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","alternateName","siteTitleAlt","itemListElement","position","item","headline","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-templates-page-template-jsx-78c26dc6c096bf0f6c1a.js","sourcesContent":["import React from \"react\";\n\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\n  <aside className={`${extraClass} padding-top padding-bottom`}>\n    {children}\n  </aside>\n)\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"text-uppercase\">\n    <small>{title}</small>\n  </h3>\n)\n\nexport default WidgetTitle;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getCategoryPath } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./WidgetCategory.scss\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {\n        categoryList.map(category => (\n          <AutoLink \n            key={category} \n            to={getCategoryPath(category)}\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half category\"\n          >\n            <span>{category}</span>\n          </AutoLink>\n        ))\n      }\n    </div>\n  </WidgetContainer>\n)\n\nexport default WidgetCategory;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport { getTagPath } from \"../../utils/helpers\";\nimport \"./Tag.scss\";\n\nconst Tag = ({ content }) => (\n  <AutoLink \n    key={content} \n    to={getTagPath(content)}\n    className=\"inline-block margin-right-half margin-bottom-half \n      border border-color-light-grey padding-left-half padding-right-half tags\"\n  >\n    <span className=\"content\">{content}</span>\n  </AutoLink>\n)\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map(tag => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n)\n\nexport default WidgetTag;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n  return (\n    <WidgetContainer extraClass=\"latest-posts-container\">\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div>\n        {\n          postList.map((post,index) => (\n            <AutoLink\n              key={index}\n              to={post.slug}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{post.title}</span>\n            </AutoLink>\n          ))\n        }\n      </div>\n    </WidgetContainer>\n  )\n}\n\nexport default WidgetLatesPosts;","import React from 'react';\nimport AutoLink from '../AutoLink/AutoLink';\nimport WidgetContainer from './WidgetContainer';\nimport WidgetTitle from './WidgetTitle';\nimport config from '../../../data/SiteConfig';\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer extraClass=\"categories-container\">\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div>\n          {links.map(link => (\n            <AutoLink\n              key={link.label}\n              to={link.url}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{link.label}</span>\n            </AutoLink>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;\n","import React, { Component } from 'react';\nimport WidgetContainer from './WidgetContainer';\nimport WidgetTitle from './WidgetTitle';\nimport config from '../../../data/SiteConfig';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer extraClass=\"search-container\">\n            <WidgetTitle title={config.searchWidgetTitle} />\n            {/* <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\n              <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n                <div className=\"padding-none padding-left-half col-xs-2\">\n                  <button type=\"submit\" className=\"btn btn-search\">\n                    <FontAwesomeIcon\n                      icon={['fas', 'search']}\n                      style={{ color: '#0ca678' }}\n                    />\n                  </button>\n                </div>\n              </div>\n            </form> */}\n             <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n              </div>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;\n","import React from 'react';\nimport WidgetCategory from './WidgetCategory';\nimport WidgetTag from './WidgetTag';\nimport WidgetLatestPosts from './WidgetLatestPosts';\nimport WidgetLinks from './WidgetLinks';\nimport WidgetSearch from './WidgetSearch';\nimport config from '../../../data/SiteConfig';\nimport GoogleAdvertise from '../Adsense/Adsense';\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside\n      className={`sidebar-container ${\n        config.sidebarSticky ? 'height-full' : ''\n      }`}\n      style={{ width : '300px'}}\n    >\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div className=\"position-sticky top-zero\">\n          <WidgetLinks links={links} />\n        </div>\n      )}\n\n\n    <GoogleAdvertise\n            client=\"ca-pub-2038621379918916\"\n            slot=\"7576233308\"\n            format=\"fluid\"\n            responsive=\"true\"\n            layoutKey=\"-fz+6a+19-cg+hh\"\n          />\n\n\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import React, { useEffect } from \"react\";\n\nconst GoogleAdvertise = ({\n  className = \"adsbygoogle\",\n  client = \"\",\n  slot = \"\",\n  format = \"\",\n  responsive = \"\",\n  layoutKey = \"\"\n}) => {\n    useEffect(() => {\n        //production인 경우만 광고 요청\n        //어차피 로컬에서는 광고가 표시되지 않는다\n        if (process.env.NODE_ENV === \"production\")\n          try {\n            (window.adsbygoogle = window.adsbygoogle || []).push({});\n            console.log(\"Advertise is pushed\");\n          } catch (e) {\n            console.error(\"AdvertiseError\", e);\n          }\n      }, []);\n    \n      //production이 아닌 경우 대체 컴포넌트 표시\n      if (process.env.NODE_ENV !== \"production\")\n        return (\n          <div\n            style={{\n              background: \"#e9e9e9\",\n              color: \"black\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n              padding: \"16px\"\n            }}\n          >\n            광고 표시 영역\n          </div>\n    );\n  return (\n    <ins\n      className={className}\n      style={{\n        overflowX: \"auto\",\n        overflowY: \"hidden\",\n        display: \"block\",\n        textAlign: \"center\"\n      }}\n      data-ad-client={client}\n      data-ad-slot={slot}\n      data-ad-format={format}\n      data-full-width-responsive={responsive}\n      data-ad-layout-key={layoutKey}\n    />\n  );\n};\n\nexport default GoogleAdvertise;","import React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"main-container container\">\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\n      {content}\n    </div>\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\n      {sidebar}\n    </div>\n  </section>\n)\n\nexport default MainContainer;\n","import React from \"react\";\n\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div \n        className=\"padding-top padding-bottom\" \n        dangerouslySetInnerHTML={{ __html: postNode.html }} \n      />\n    </div>\n  )\n}\n\nexport default Page;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = <Sidebar \n    tagList={tagList} \n    categoryList={categoryList}\n    latestPostEdges={latestPostEdges} \n    links={config.sidebarLinks}\n  />;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n}\n\nexport default PageTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt(pruneLength: 100, truncate: true)\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords\n\n      if (postMeta.cover) {\n        image = postMeta.cover.childImageSharp.fixed.src;\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}