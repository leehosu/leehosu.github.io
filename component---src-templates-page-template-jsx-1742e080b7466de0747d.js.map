{"version":3,"sources":["webpack:///./src/components/Sidebar/WidgetContainer.jsx","webpack:///./src/components/Sidebar/WidgetTitle.jsx","webpack:///./src/components/Sidebar/WidgetCategory.jsx","webpack:///./src/components/Tag/Tag.jsx","webpack:///./src/components/Sidebar/WidgetTag.jsx","webpack:///./src/components/Sidebar/WidgetLatestPosts.jsx","webpack:///./src/components/Sidebar/WidgetLinks.jsx","webpack:///./src/components/Sidebar/WidgetSearch.jsx","webpack:///./src/components/Sidebar/Sidebar.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/Adsense/Adsense.jsx","webpack:///./src/components/MainContainer/MainContainer.jsx","webpack:///./src/components/Page/Page.jsx","webpack:///./src/templates/page-template.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["WidgetContainer","_ref","_ref$extraClass","extraClass","children","React","createElement","className","WidgetTitle","title","WidgetCategory","categoryList","config","categoryWidgetTitle","map","category","AutoLink","key","to","getCategoryPath","Tag","content","getTagPath","WidgetTag","tagList","tagWidgetTitle","tag","WidgetLatesPosts","latestPostEdges","postList","getPostList","latestPostsWidgetTitle","post","index","slug","WidgetLinks","links","Fragment","length","linksWidgetTitle","link","label","url","WidgetSearch","_Component","apply","arguments","_inheritsLoose","prototype","render","hasSearch","searchWidgetTitle","type","name","placeholder","searchWidgetPlaceHolder","required","spellCheck","Component","Sidebar","sidebarSticky","style","width","WidgetLatestPosts","GoogleAdvertise","client","slot","format","responsive","layoutKey","normalize","strArray","resultArray","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","slice","call","module","exports","definition","_ref$className","_ref$client","_ref$slot","_ref$format","_ref$responsive","_ref$layoutKey","useEffect","window","adsbygoogle","console","log","e","error","overflowX","overflowY","display","textAlign","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","data-ad-layout-key","MainContainer","sidebar","Page","postNode","frontmatter","id","dangerouslySetInnerHTML","__html","html","PageTemplate","data","pageContext","markdownRemark","sidebarLinks","Layout","Helmet","siteTitle","SEO","postPath","postSEO","Header","description","keywords","postURL","_this$props","this","props","image","postMeta","excerpt","cover","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","alternateName","siteTitleAlt","itemListElement","position","item","headline","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"0JAQeA,EANS,SAAHC,GAAA,IAAAC,EAAAD,EAAME,kBAAU,IAAAD,EAAG,GAAEA,EAAEE,EAAQH,EAARG,SAAQ,OAClDC,IAAAC,cAAA,SAAOC,UAAcJ,EAAU,+BAC5BC,ICIUI,EANK,SAAHP,GAAA,IAAMQ,EAAKR,EAALQ,MAAK,OAC1BJ,IAAAC,cAAA,MAAIC,UAAU,kBACZF,IAAAC,cAAA,aAAQG,K,iCCuBGC,G,UAnBQ,SAAHT,GAAA,IAAMU,EAAYV,EAAZU,aAAY,OACpCN,IAAAC,cAACN,EAAe,CAACG,WAAW,wBAC1BE,IAAAC,cAACE,EAAW,CAACC,MAAOG,IAAOC,sBAC3BR,IAAAC,cAAA,WAEIK,EAAaG,KAAI,SAAAC,GAAQ,OACvBV,IAAAC,cAACU,IAAQ,CACPC,IAAKF,EACLG,GAAIC,YAAgBJ,GACpBR,UAAU,6FAEVF,IAAAC,cAAA,YAAOS,WCHJK,G,UAXH,SAAHnB,GAAA,IAAMoB,EAAOpB,EAAPoB,QAAO,OACpBhB,IAAAC,cAACU,IAAQ,CACPC,IAAKI,EACLH,GAAII,YAAWD,GACfd,UAAU,+HAGVF,IAAAC,cAAA,QAAMC,UAAU,WAAWc,MCKhBE,EAXG,SAAHtB,GAAA,IAAMuB,EAAOvB,EAAPuB,QAAO,OAC1BnB,IAAAC,cAACN,EAAe,CAACG,WAAW,wBAC1BE,IAAAC,cAACE,EAAW,CAACC,MAAOG,IAAOa,iBAC3BpB,IAAAC,cAAA,WACGkB,EAAQV,KAAI,SAAAY,GAAG,OACdrB,IAAAC,cAACc,EAAG,CAACH,IAAKS,EAAKL,QAASK,UCkBjBC,EAtBU,SAAH1B,GAA6B,IAAvB2B,EAAe3B,EAAf2B,gBACpBC,EAAWC,YAAYF,GAC7B,OACEvB,IAAAC,cAACN,EAAe,CAACG,WAAW,0BAC1BE,IAAAC,cAACE,EAAW,CAACC,MAAOG,IAAOmB,yBAC3B1B,IAAAC,cAAA,WAEIuB,EAASf,KAAI,SAACkB,EAAKC,GAAK,OACtB5B,IAAAC,cAACU,IAAQ,CACPC,IAAKgB,EACLf,GAAIc,EAAKE,KACT3B,UAAU,oFAEVF,IAAAC,cAAA,YAAO0B,EAAKvB,cCOX0B,EArBK,SAAHlC,GAAA,IAAMmC,EAAKnC,EAALmC,MAAK,OAC1B/B,IAAAC,cAAAD,IAAAgC,SAAA,KACGD,GAASA,EAAME,OAAS,GACvBjC,IAAAC,cAACN,EAAe,CAACG,WAAW,wBAC1BE,IAAAC,cAACE,EAAW,CAACC,MAAOG,IAAO2B,mBAC3BlC,IAAAC,cAAA,WACG8B,EAAMtB,KAAI,SAAA0B,GAAI,OACbnC,IAAAC,cAACU,IAAQ,CACPC,IAAKuB,EAAKC,MACVvB,GAAIsB,EAAKE,IACTnC,UAAU,oFAEVF,IAAAC,cAAA,YAAOkC,EAAKC,e,YCoCXE,EAhDG,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA6Cf,OA7CeC,YAAAJ,EAAAC,GAAAD,EAAAK,UAChBC,OAAA,WACE,OACE5C,IAAAC,cAAAD,IAAAgC,SAAA,KACGzB,IAAOsC,WACN7C,IAAAC,cAACN,EAAe,CAACG,WAAW,oBAC1BE,IAAAC,cAACE,EAAW,CAACC,MAAOG,IAAOuC,oBAuB1B9C,IAAAC,cAAA,OAAKC,UAAU,sDACZF,IAAAC,cAAA,OAAKC,UAAU,6CACbF,IAAAC,cAAA,SACEC,UAAU,qBACV6C,KAAK,OACLC,KAAK,IACLC,YAAa1C,IAAO2C,wBACpBC,UAAQ,EACRC,WAAW,eAQ5Bd,EA7Ce,CAASe,a,YCqCZC,IAlCC,SAAH1D,GAA2D,IAArDuB,EAAOvB,EAAPuB,QAASb,EAAYV,EAAZU,aAAciB,EAAe3B,EAAf2B,gBAAiBQ,EAAKnC,EAALmC,MACzD,OACE/B,IAAAC,cAAA,SACEC,UAAS,sBACPK,IAAOgD,cAAgB,cAAgB,IAEzCC,MAAO,CAAEC,MAAQ,UAEjBzD,IAAAC,cAACqC,EAAY,MAEZf,GACCvB,IAAAC,cAACyD,EAAiB,CAACnC,gBAAiBA,IAGrCjB,GAAgBN,IAAAC,cAACI,EAAc,CAACC,aAAcA,IAE9Ca,GAAWnB,IAAAC,cAACiB,EAAS,CAACC,QAASA,IAE/BY,GACC/B,IAAAC,cAAA,OAAKC,UAAU,4BACbF,IAAAC,cAAC6B,EAAW,CAACC,MAAOA,KAGxB/B,IAAAC,cAAC0D,IAAe,CACdC,OAAO,0BACPC,KAAK,aACLC,OAAO,OACPC,WAAW,OACXC,UAAU,uB,8CCrClB,YAEoB,WAClB,SAASC,EAAUC,GACjB,IAAIC,EAAc,GAClB,GAAwB,IAApBD,EAASjC,OACX,MAAO,GAET,GAA2B,iBAAhBiC,EAAS,GAClB,MAAM,IAAIE,UAAU,kCAAoCF,EAAS,IAInE,GAAIA,EAAS,GAAGG,MAAM,iBAAmBH,EAASjC,OAAS,EAAG,CAC5D,IAAIqC,EAAQJ,EAASK,QACrBL,EAAS,GAAKI,EAAQJ,EAAS,GAI7BA,EAAS,GAAGG,MAAM,gBACpBH,EAAS,GAAKA,EAAS,GAAGM,QAAQ,gBAAiB,UAEnDN,EAAS,GAAKA,EAAS,GAAGM,QAAQ,gBAAiB,SAErD,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAASjC,OAAQwC,IAAK,CACxC,IAAIC,EAAYR,EAASO,GACzB,GAAyB,iBAAdC,EACT,MAAM,IAAIN,UAAU,kCAAoCM,GAExC,KAAdA,IAGAD,EAAI,IAENC,EAAYA,EAAUF,QAAQ,SAAU,KAIxCE,EAFED,EAAIP,EAASjC,OAAS,EAEZyC,EAAUF,QAAQ,SAAU,IAG5BE,EAAUF,QAAQ,SAAU,KAE1CL,EAAYQ,KAAKD,IAEnB,IAAIE,EAAMT,EAAYU,KAAK,KAOvBC,GAHJF,EAAMA,EAAIJ,QAAQ,kBAAmB,OAGrBO,MAAM,KAEtB,OADAH,EAAME,EAAMP,SAAWO,EAAM7C,OAAS,EAAI,IAAM,IAAM6C,EAAMD,KAAK,KAGnE,OAAO,WAOL,OAAOZ,EALqB,iBAAjBxB,UAAU,GACXA,UAAU,GAEV,GAAGuC,MAAMC,KAAKxC,cA5DWyC,EAAOC,QAASD,EAAOC,QAAUC,SAAmF,0BAAjB,KAAiB,mC,oCCD3J,yBAwDezB,IAtDS,SAAH/D,GAOd,IAADyF,EAAAzF,EANJM,iBAAS,IAAAmF,EAAG,cAAaA,EAAAC,EAAA1F,EACzBgE,cAAM,IAAA0B,EAAG,GAAEA,EAAAC,EAAA3F,EACXiE,YAAI,IAAA0B,EAAG,GAAEA,EAAAC,EAAA5F,EACTkE,cAAM,IAAA0B,EAAG,GAAEA,EAAAC,EAAA7F,EACXmE,kBAAU,IAAA0B,EAAG,GAAEA,EAAAC,EAAA9F,EACfoE,iBAAS,IAAA0B,EAAG,GAAEA,EA8Bd,OA5BEC,qBAAU,WAIJ,KACGC,OAAOC,YAAcD,OAAOC,aAAe,IAAIlB,KAAK,IACrDmB,QAAQC,IAAI,uBACZ,MAAOC,GACPF,QAAQG,MAAM,iBAAkBD,MAEnC,IAmBLhG,IAAAC,cAAA,OACEC,UAAWA,EACXsD,MAAO,CACL0C,UAAW,OACXC,UAAW,SACXC,QAAS,QACTC,UAAW,UAEbC,iBAAgB1C,EAChB2C,eAAc1C,EACd2C,iBAAgB1C,EAChB2C,6BAA4B1C,EAC5B2C,qBAAoB1C,M,kCCnD1B,mCAce2C,IAXO,SAAH/G,GAAA,IAAMoB,EAAOpB,EAAPoB,QAAS4F,EAAOhH,EAAPgH,QAAO,OACvC5G,IAAAC,cAAA,WAASC,UAAU,4BACjBF,IAAAC,cAAA,OAAKC,UAAU,qDACZc,GAEHhB,IAAAC,cAAA,OAAKC,UAAU,qDACZ0G,M,8JCSQC,EAhBF,SAAHjH,GAA4B,IAAtBkH,EAAQlH,EAARkH,SAAUjF,EAAIjC,EAAJiC,KAClBF,EAAOmF,EAASC,YAKtB,OAJKpF,EAAKqF,KACRrF,EAAKqF,GAAKnF,GAIV7B,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OACEC,UAAU,6BACV+G,wBAAyB,CAAEC,OAAQJ,EAASK,U,iCCwBrCC,UAzBM,SAAHxH,GAA+B,IAAzByH,EAAIzH,EAAJyH,KAAMC,EAAW1H,EAAX0H,YACpBzF,EAAiDyF,EAAjDzF,KAAMV,EAA2CmG,EAA3CnG,QAASb,EAAkCgH,EAAlChH,aAAciB,EAAoB+F,EAApB/F,gBAE/BuF,EAAWO,EAAKE,eAChBnH,EAAQ0G,EAASC,YAAY3G,MAC7BY,EAAUhB,IAAAC,cAAC4G,EAAI,CAACC,SAAUA,EAAUjF,KAAMA,IAC1C+E,EAAU5G,IAAAC,cAACqD,IAAO,CACtBnC,QAASA,EACTb,aAAcA,EACdiB,gBAAiBA,EACjBQ,MAAOxB,IAAOiH,eAGhB,OACExH,IAAAC,cAACwH,IAAM,KACLzH,IAAAC,cAACyH,IAAM,KACL1H,IAAAC,cAAA,aAAWG,EAAK,MAAMG,IAAOoH,YAE/B3H,IAAAC,cAAC2H,IAAG,CAACC,SAAUhG,EAAMiF,SAAUA,EAAUgB,SAAO,IAChD9H,IAAAC,cAAC8H,IAAM,CAAC3H,MAAOA,IACfJ,IAAAC,cAAC0G,IAAa,CAAC3F,QAASA,EAAS4F,QAASA,O,sIC1B1CgB,EAAG,SAAArF,GAAA,SAAAqF,IAAA,OAAArF,EAAAC,MAAA,KAAAC,YAAA,KAyGN,OAzGMC,YAAAkF,EAAArF,GAAAqF,EAAAjF,UACPC,OAAA,WACE,IACIxC,EACA4H,EACAC,EAEAC,EALJC,EAAwCC,KAAKC,MAArCvB,EAAQqB,EAARrB,SAAUe,EAAQM,EAARN,SAAUC,EAAOK,EAAPL,QAIxBQ,EAAQ,GAEZ,GAAIR,EAAS,CACX,IAAMS,EAAWzB,EAASC,YACvB3G,EAAUmI,EAAVnI,MACH4H,EAAcO,EAASP,YACnBO,EAASP,YACTlB,EAAS0B,QAEbP,EAAWM,EAASN,SAEhBM,EAASE,QACXH,EAAQC,EAASE,MAAMC,gBAAgBC,MAAMC,KAG/CV,EAAUW,IAAQtI,IAAOuI,QAASvI,IAAOwI,WAAYlB,QAErDzH,EAAQG,IAAOoH,UACfK,EAAczH,IAAOyI,gBACrBV,EAAQ/H,IAAO0I,SAGjBX,EAAQO,IAAQtI,IAAOuI,QAASvI,IAAOwI,WAAYT,GACnD,IAAMY,EAAUL,IAAQtI,IAAOuI,QAASvI,IAAOwI,YACzCI,EAAkB,CACtB,CACE,WAAY,oBACZ,QAAS,UACT9G,IAAK6G,EACLlG,KAAM5C,EACNgJ,cAAe7I,IAAO8I,aAAe9I,IAAO8I,aAAe,KAmC/D,OAhCIvB,GACFqB,EAAgBxE,KACd,CACE,WAAY,oBACZ,QAAS,iBACT2E,gBAAiB,CACf,CACE,QAAS,WACTC,SAAU,EACVC,KAAM,CACJ,MAAOtB,EACPlF,KAAM5C,EACNkI,YAKR,CACE,WAAY,oBACZ,QAAS,cACTjG,IAAK6G,EACLlG,KAAM5C,EACNgJ,cAAe7I,IAAO8I,aAAe9I,IAAO8I,aAAe,GAC3DI,SAAUrJ,EACVkI,MAAO,CACL,QAAS,cACTjG,IAAKiG,GAEPN,gBAKJhI,IAAAC,cAACyH,IAAM,KAEL1H,IAAAC,cAAA,QAAM+C,KAAK,cAAchC,QAASgH,IAClChI,IAAAC,cAAA,QAAM+C,KAAK,QAAQhC,QAASsH,IAC3BL,GAAYjI,IAAAC,cAAA,QAAM+C,KAAK,WAAWhC,QAASiH,IAG5CjI,IAAAC,cAAA,UAAQ8C,KAAK,uBACV2G,KAAKC,UAAUR,IAIlBnJ,IAAAC,cAAA,QAAM2J,SAAS,SAAS5I,QAAS8G,EAAUI,EAAUgB,IACpDpB,EAAU9H,IAAAC,cAAA,QAAM2J,SAAS,UAAU5I,QAAQ,YAAe,KAC3DhB,IAAAC,cAAA,QAAM2J,SAAS,WAAW5I,QAASZ,IACnCJ,IAAAC,cAAA,QAAM2J,SAAS,iBAAiB5I,QAASgH,IACzChI,IAAAC,cAAA,QAAM2J,SAAS,WAAW5I,QAASsH,IACnCtI,IAAAC,cAAA,QACE2J,SAAS,YACT5I,QAAST,IAAOsJ,YAActJ,IAAOsJ,YAAc,KAIrD7J,IAAAC,cAAA,QAAM+C,KAAK,eAAehC,QAAQ,wBAClChB,IAAAC,cAAA,QACE+C,KAAK,kBACLhC,QAAST,IAAOuJ,YAAcvJ,IAAOuJ,YAAc,KAErD9J,IAAAC,cAAA,QAAM+C,KAAK,gBAAgBhC,QAASZ,IACpCJ,IAAAC,cAAA,QAAM+C,KAAK,sBAAsBhC,QAASgH,IAC1ChI,IAAAC,cAAA,QAAM+C,KAAK,gBAAgBhC,QAASsH,MAGzCV,EAzGM,CAASvE,aA4GHuE","file":"component---src-templates-page-template-jsx-1742e080b7466de0747d.js","sourcesContent":["import React from \"react\";\n\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\n  <aside className={`${extraClass} padding-top padding-bottom`}>\n    {children}\n  </aside>\n)\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"text-uppercase\">\n    <small>{title}</small>\n  </h3>\n)\n\nexport default WidgetTitle;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getCategoryPath } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./WidgetCategory.scss\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {\n        categoryList.map(category => (\n          <AutoLink \n            key={category} \n            to={getCategoryPath(category)}\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half category\"\n          >\n            <span>{category}</span>\n          </AutoLink>\n        ))\n      }\n    </div>\n  </WidgetContainer>\n)\n\nexport default WidgetCategory;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport { getTagPath } from \"../../utils/helpers\";\nimport \"./Tag.scss\";\n\nconst Tag = ({ content }) => (\n  <AutoLink \n    key={content} \n    to={getTagPath(content)}\n    className=\"inline-block margin-right-half margin-bottom-half \n      border border-color-light-grey padding-left-half padding-right-half tags\"\n  >\n    <span className=\"content\">{content}</span>\n  </AutoLink>\n)\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map(tag => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n)\n\nexport default WidgetTag;","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n  return (\n    <WidgetContainer extraClass=\"latest-posts-container\">\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div>\n        {\n          postList.map((post,index) => (\n            <AutoLink\n              key={index}\n              to={post.slug}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{post.title}</span>\n            </AutoLink>\n          ))\n        }\n      </div>\n    </WidgetContainer>\n  )\n}\n\nexport default WidgetLatesPosts;","import React from 'react';\nimport AutoLink from '../AutoLink/AutoLink';\nimport WidgetContainer from './WidgetContainer';\nimport WidgetTitle from './WidgetTitle';\nimport config from '../../../data/SiteConfig';\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer extraClass=\"categories-container\">\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div>\n          {links.map(link => (\n            <AutoLink\n              key={link.label}\n              to={link.url}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{link.label}</span>\n            </AutoLink>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;\n","import React, { Component } from 'react';\nimport WidgetContainer from './WidgetContainer';\nimport WidgetTitle from './WidgetTitle';\nimport config from '../../../data/SiteConfig';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer extraClass=\"search-container\">\n            <WidgetTitle title={config.searchWidgetTitle} />\n            {/* <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\n              <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n                <div className=\"padding-none padding-left-half col-xs-2\">\n                  <button type=\"submit\" className=\"btn btn-search\">\n                    <FontAwesomeIcon\n                      icon={['fas', 'search']}\n                      style={{ color: '#0ca678' }}\n                    />\n                  </button>\n                </div>\n              </div>\n            </form> */}\n             <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n              </div>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;\n","import React from 'react';\nimport WidgetCategory from './WidgetCategory';\nimport WidgetTag from './WidgetTag';\nimport WidgetLatestPosts from './WidgetLatestPosts';\nimport WidgetLinks from './WidgetLinks';\nimport WidgetSearch from './WidgetSearch';\nimport config from '../../../data/SiteConfig';\nimport GoogleAdvertise from '../Adsense/Adsense';\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside\n      className={`sidebar-container ${\n        config.sidebarSticky ? 'height-full' : ''\n      }`}\n      style={{ width : '300px'}}\n    >\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div className=\"position-sticky top-zero\">\n          <WidgetLinks links={links} />\n        </div>\n      )}\n      <GoogleAdvertise\n        client=\"ca-pub-2038621379918916\"\n        slot=\"7576233308\"\n        format=\"auto\"\n        responsive=\"true\"\n        layoutKey=\"-fz+6a+19-cg+hh\"\n      />\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) {\n      return '';\n    }\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n      if (component === '') {\n        continue;\n      }\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n      resultArray.push(component);\n    }\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n  return function () {\n    var input;\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n    return normalize(input);\n  };\n});","import React, { useEffect } from \"react\";\n\nconst GoogleAdvertise = ({\n  className = \"adsbygoogle\",\n  client = \"\",\n  slot = \"\",\n  format = \"\",\n  responsive = \"\",\n  layoutKey = \"\"\n}) => {\n    useEffect(() => {\n        //production인 경우만 광고 요청\n        //어차피 로컬에서는 광고가 표시되지 않는다\n        if (process.env.NODE_ENV === \"production\")\n          try {\n            (window.adsbygoogle = window.adsbygoogle || []).push({});\n            console.log(\"Advertise is pushed\");\n          } catch (e) {\n            console.error(\"AdvertiseError\", e);\n          }\n      }, []);\n    \n      //production이 아닌 경우 대체 컴포넌트 표시\n      if (process.env.NODE_ENV !== \"production\")\n        return (\n          <div\n            style={{\n              background: \"#e9e9e9\",\n              color: \"black\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n              padding: \"16px\"\n            }}\n          >\n            광고 표시 영역\n          </div>\n    );\n  return (\n    <ins\n      className={className}\n      style={{\n        overflowX: \"auto\",\n        overflowY: \"hidden\",\n        display: \"block\",\n        textAlign: \"center\"\n      }}\n      data-ad-client={client}\n      data-ad-slot={slot}\n      data-ad-format={format}\n      data-full-width-responsive={responsive}\n      data-ad-layout-key={layoutKey}\n    />\n  );\n};\n\nexport default GoogleAdvertise;","import React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"main-container container\">\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\n      {content}\n    </div>\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\n      {sidebar}\n    </div>\n  </section>\n)\n\nexport default MainContainer;\n","import React from \"react\";\n\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div \n        className=\"padding-top padding-bottom\" \n        dangerouslySetInnerHTML={{ __html: postNode.html }} \n      />\n    </div>\n  )\n}\n\nexport default Page;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = <Sidebar \n    tagList={tagList} \n    categoryList={categoryList}\n    latestPostEdges={latestPostEdges} \n    links={config.sidebarLinks}\n  />;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n}\n\nexport default PageTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt(pruneLength: 100, truncate: true)\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords\n\n      if (postMeta.cover) {\n        image = postMeta.cover.childImageSharp.fixed.src;\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}