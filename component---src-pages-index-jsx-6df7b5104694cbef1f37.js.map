{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/SEO.jsx"],"names":["Index","_React$Component","apply","arguments","_inheritsLoose","prototype","render","postEdges","this","props","data","allMarkdownRemark","edges","postList","getPostList","_getTagCategoryList","getTagCategoryList","tagList","categoryList","content","React","createElement","PostListing","hasThumbnail","config","homeHasThumbnail","hasLoadmore","homeHasLoadmore","postsPerPage","numberLoadmore","btnLoadmore","sidebar","Sidebar","links","sidebarLinks","headerTitle","homeHeader","siteTitle","Layout","className","Helmet","title","SEO","Header","MainContainer","Component","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","slice","call","module","exports","definition","_Component","description","keywords","postURL","_this$props","postNode","postPath","postSEO","image","postMeta","frontmatter","excerpt","cover","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","itemListElement","position","item","headline","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-pages-index-jsx-6df7b5104694cbef1f37.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport { getPostList, getTagCategoryList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    const postList = getPostList(postEdges);\n    const { tagList, categoryList } = getTagCategoryList(postList);\n    const content = (\n      <PostListing \n        postList={postList} \n        hasThumbnail={config.homeHasThumbnail} \n        hasLoadmore={config.homeHasLoadmore} \n        postsPerPage={config.postsPerPage}\n        numberLoadmore={config.numberLoadmore}\n        btnLoadmore={config.btnLoadmore}\n      />\n    );\n    const sidebar = (\n      <Sidebar \n        tagList={tagList} \n        categoryList={categoryList} \n        links={config.sidebarLinks}\n      />\n    );\n\n    const headerTitle = config.homeHeader \n      ? `${config.homeHeader}`\n      : `${config.siteTitle}`;\n\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <Header title={headerTitle} />\n          <MainContainer content={content} sidebar={sidebar} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { \n        fields: [fields___date], \n        order: DESC \n      }\n      filter: { \n        frontmatter: { \n          template: { eq: \"post\" } \n        } \n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 660, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) {\n      return '';\n    }\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n      if (component === '') {\n        continue;\n      }\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n      resultArray.push(component);\n    }\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n  return function () {\n    var input;\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n    return normalize(input);\n  };\n});","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords\n\n      if (postMeta.cover) {\n        image = postMeta.cover.childImageSharp.fixed.src;\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}